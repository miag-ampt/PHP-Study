<?php

/*
関数に渡す引数を参照で受け取る場合、引数のリストに&を付けて関数の定義をする
次の例は引数に受け取った変数に1を加える関数。
値渡しではなく参照で渡されるため、グローバルスコープに定義された変数$aそのものが変更される
*/

function add_one(&$value)
{
    $calue += 1;
}

$a 10;
add_one($a);

echo $a, PHP_EOL; //11

//引数を参照で受け取る関数には、値を直接は渡せず、変数である必要がある
add_one(2); //エラー

/*
このように、引数に渡した変数の中身を書き換える可能性のある関数のことを破壊的な関数という
sort()関数などが破壊的な関数に当たる。
また、関数の返り値に参照を用いたい場合は、関数名の前に&を付けて関数を定義する。
また、返り値を受け取る際、代入演算子にも&を点ける必要がある。
このような場合,returnに直接値を指定してはいけない
*/

function $add_one(&&value)
{
    $value += 1;
    return $value;
}


$a = 10;
$b =& add_one($a); //関数の返り値を参照で受け取る必要がある
$b += 1; //$bは$aの参照なので、$aの値も変更される

echo $a, PHP_EOL; //12
